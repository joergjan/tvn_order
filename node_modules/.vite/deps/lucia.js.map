{
  "version": 3,
  "sources": ["../../lucia/dist/utils/cookie.js", "../../lucia/dist/auth/cookie.js", "../../lucia/dist/utils/log.js", "../../lucia/dist/auth/error.js", "../../lucia/dist/scrypt/index.js", "../../lucia/dist/utils/crypto.js", "../../lucia/dist/utils/date.js", "../../lucia/dist/auth/session.js", "../../lucia/dist/utils/debug.js", "../../lucia/dist/utils/url.js", "../../lucia/dist/auth/request.js", "../../lucia/dist/auth/adapter.js", "../../lucia/dist/auth/database.js", "../../lucia/dist/auth/index.js"],
  "sourcesContent": ["/*\ncode from https://github.com/jshttp/cookie\n\nthe library this code is from is a commonjs library,\nwhich some frameworks don't support (eg. Astro)\n\nalso required an external library for ts support\n*/\nexport const parseCookie = (str) => {\n    const obj = {};\n    let index = 0;\n    while (index < str.length) {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) {\n            break;\n        }\n        let endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        }\n        else if (endIdx < eqIdx) {\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (!(key in obj)) {\n            let val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n};\nexport const serializeCookie = (name, val, options) => {\n    const opt = options ?? {};\n    const enc = opt.encode ?? encodeURIComponent;\n    const value = enc(val);\n    let str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        const expires = opt.expires;\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.priority) {\n        const priority = typeof opt.priority === \"string\"\n            ? opt.priority.toLowerCase()\n            : opt.priority;\n        switch (priority) {\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === \"string\"\n            ? opt.sameSite.toLowerCase()\n            : opt.sameSite;\n        switch (sameSite) {\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n};\nconst tryDecode = (str) => {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n};\n", "import { serializeCookie } from \"../utils/cookie.js\";\nexport const DEFAULT_SESSION_COOKIE_NAME = \"auth_session\";\nconst defaultSessionCookieAttributes = {\n    sameSite: \"lax\",\n    path: \"/\"\n};\nexport const createSessionCookie = (session, options) => {\n    let expires;\n    if (session === null) {\n        expires = 0;\n    }\n    else if (options.cookie.expires !== false) {\n        expires = session.idlePeriodExpiresAt.getTime();\n    }\n    else {\n        expires = Date.now() + 1000 * 60 * 60 * 24 * 365; // + 1 year\n    }\n    return new Cookie(options.cookie.name ?? DEFAULT_SESSION_COOKIE_NAME, session?.sessionId ?? \"\", {\n        ...(options.cookie.attributes ?? defaultSessionCookieAttributes),\n        httpOnly: true,\n        expires: new Date(expires),\n        secure: options.env === \"PROD\"\n    });\n};\nexport class Cookie {\n    constructor(name, value, options) {\n        this.name = name;\n        this.value = value;\n        this.attributes = options;\n    }\n    name;\n    value;\n    attributes;\n    serialize = () => {\n        return serializeCookie(this.name, this.value, this.attributes);\n    };\n}\n", "export const logError = (message) => {\n    console.log(\"\\x1b[31m%s\\x1b[31m\", `[LUCIA_ERROR] ${message}`);\n};\n", "export class LuciaError extends Error {\n    constructor(errorMsg, detail) {\n        super(errorMsg);\n        this.message = errorMsg;\n        this.detail = detail ?? \"\";\n    }\n    detail;\n    message;\n}\n", "export const scrypt = async (password, salt, options) => {\n    const { N, r, p } = options;\n    const dkLen = options.dkLen ?? 32;\n    const maxmem = 1024 ** 3 + 1024;\n    const blockSize = 128 * r;\n    const blockSize32 = blockSize / 4;\n    if (N <= 1 ||\n        (N & (N - 1)) !== 0 ||\n        N >= 2 ** (blockSize / 8) ||\n        N > 2 ** 32) {\n        throw new Error(\"Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32\");\n    }\n    if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n        throw new Error(\"Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)\");\n    }\n    if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n        throw new Error(\"Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32\");\n    }\n    const memUsed = blockSize * (N + p);\n    if (memUsed > maxmem) {\n        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);\n    }\n    const B = await pbkdf2(password, salt, { c: 1, dkLen: blockSize * p });\n    const B32 = u32(B);\n    const V = u32(new Uint8Array(blockSize * N));\n    const tmp = u32(new Uint8Array(blockSize));\n    for (let pi = 0; pi < p; pi++) {\n        const Pi = blockSize32 * pi;\n        for (let i = 0; i < blockSize32; i++)\n            V[i] = B32[Pi + i]; // V[0] = B[i]\n        for (let i = 0, pos = 0; i < N - 1; i++) {\n            BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n            await new Promise((r) => r()); // await next tick\n        }\n        BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n        for (let i = 0; i < N; i++) {\n            // First u32 of the last 64-byte block (u32 is LE)\n            const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n            for (let k = 0; k < blockSize32; k++) {\n                tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n            }\n            BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n            await new Promise((r) => r()); // await next tick\n        }\n    }\n    const res = await pbkdf2(password, B, { c: 1, dkLen });\n    B.fill(0);\n    V.fill(0);\n    tmp.fill(0);\n    return res;\n};\nconst rotl = (a, b) => (a << b) | (a >>> (32 - b));\nconst XorAndSalsa = (prev, pi, input, ii, out, oi) => {\n    const y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n    const y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n    const y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n    const y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n    const y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n    const y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n    const y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n    const y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n    let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n    for (let i = 0; i < 8; i += 2) {\n        x04 ^= rotl((x00 + x12) | 0, 7);\n        x08 ^= rotl((x04 + x00) | 0, 9);\n        x12 ^= rotl((x08 + x04) | 0, 13);\n        x00 ^= rotl((x12 + x08) | 0, 18);\n        x09 ^= rotl((x05 + x01) | 0, 7);\n        x13 ^= rotl((x09 + x05) | 0, 9);\n        x01 ^= rotl((x13 + x09) | 0, 13);\n        x05 ^= rotl((x01 + x13) | 0, 18);\n        x14 ^= rotl((x10 + x06) | 0, 7);\n        x02 ^= rotl((x14 + x10) | 0, 9);\n        x06 ^= rotl((x02 + x14) | 0, 13);\n        x10 ^= rotl((x06 + x02) | 0, 18);\n        x03 ^= rotl((x15 + x11) | 0, 7);\n        x07 ^= rotl((x03 + x15) | 0, 9);\n        x11 ^= rotl((x07 + x03) | 0, 13);\n        x15 ^= rotl((x11 + x07) | 0, 18);\n        x01 ^= rotl((x00 + x03) | 0, 7);\n        x02 ^= rotl((x01 + x00) | 0, 9);\n        x03 ^= rotl((x02 + x01) | 0, 13);\n        x00 ^= rotl((x03 + x02) | 0, 18);\n        x06 ^= rotl((x05 + x04) | 0, 7);\n        x07 ^= rotl((x06 + x05) | 0, 9);\n        x04 ^= rotl((x07 + x06) | 0, 13);\n        x05 ^= rotl((x04 + x07) | 0, 18);\n        x11 ^= rotl((x10 + x09) | 0, 7);\n        x08 ^= rotl((x11 + x10) | 0, 9);\n        x09 ^= rotl((x08 + x11) | 0, 13);\n        x10 ^= rotl((x09 + x08) | 0, 18);\n        x12 ^= rotl((x15 + x14) | 0, 7);\n        x13 ^= rotl((x12 + x15) | 0, 9);\n        x14 ^= rotl((x13 + x12) | 0, 13);\n        x15 ^= rotl((x14 + x13) | 0, 18);\n    }\n    out[oi++] = (y00 + x00) | 0;\n    out[oi++] = (y01 + x01) | 0;\n    out[oi++] = (y02 + x02) | 0;\n    out[oi++] = (y03 + x03) | 0;\n    out[oi++] = (y04 + x04) | 0;\n    out[oi++] = (y05 + x05) | 0;\n    out[oi++] = (y06 + x06) | 0;\n    out[oi++] = (y07 + x07) | 0;\n    out[oi++] = (y08 + x08) | 0;\n    out[oi++] = (y09 + x09) | 0;\n    out[oi++] = (y10 + x10) | 0;\n    out[oi++] = (y11 + x11) | 0;\n    out[oi++] = (y12 + x12) | 0;\n    out[oi++] = (y13 + x13) | 0;\n    out[oi++] = (y14 + x14) | 0;\n    out[oi++] = (y15 + x15) | 0;\n};\nconst pbkdf2 = async (password, salt, options) => {\n    const pwKey = await crypto.subtle.importKey(\"raw\", password, \"PBKDF2\", false, [\"deriveBits\"]);\n    const keyBuffer = await crypto.subtle.deriveBits({\n        name: \"PBKDF2\",\n        hash: \"SHA-256\",\n        salt,\n        iterations: options.c\n    }, pwKey, options.dkLen * 8);\n    return new Uint8Array(keyBuffer);\n};\nconst BlockMix = (input, ii, out, oi, r) => {\n    let head = oi + 0;\n    let tail = oi + 16 * r;\n    for (let i = 0; i < 16; i++)\n        out[tail + i] = input[ii + (2 * r - 1) * 16 + i];\n    for (let i = 0; i < r; i++, head += 16, ii += 16) {\n        XorAndSalsa(out, tail, input, ii, out, head);\n        if (i > 0)\n            tail += 16;\n        XorAndSalsa(out, head, input, (ii += 16), out, tail);\n    }\n};\nconst u32 = (arr) => {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n};\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2022 Paul Miller (https://paulmillr.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n", "import { LuciaError } from \"../auth/error.js\";\nimport { scrypt } from \"../scrypt/index.js\";\nconst DEFAULT_ALPHABET = \"abcdefghijklmnopqrstuvwxyz1234567890\";\nexport const generateRandomString = (length, alphabet = DEFAULT_ALPHABET) => {\n    const randomUint32Values = new Uint32Array(length);\n    crypto.getRandomValues(randomUint32Values);\n    const u32Max = 0xffffffff;\n    let result = \"\";\n    for (let i = 0; i < randomUint32Values.length; i++) {\n        const rand = randomUint32Values[i] / (u32Max + 1);\n        result += alphabet[Math.floor(alphabet.length * rand)];\n    }\n    return result;\n};\nexport const generateScryptHash = async (s) => {\n    const salt = generateRandomString(16);\n    const key = await hashWithScrypt(s.normalize(\"NFKC\"), salt);\n    return `s2:${salt}:${key}`;\n};\nconst hashWithScrypt = async (s, salt, blockSize = 16) => {\n    const keyUint8Array = await scrypt(new TextEncoder().encode(s), new TextEncoder().encode(salt), {\n        N: 16384,\n        r: blockSize,\n        p: 1,\n        dkLen: 64\n    });\n    return convertUint8ArrayToHex(keyUint8Array);\n};\nexport const validateScryptHash = async (s, hash) => {\n    // detect bcrypt hash\n    // lucia used bcrypt in one of the beta versions\n    // TODO: remove in v3\n    if (hash.startsWith(\"$2a\")) {\n        throw new LuciaError(\"AUTH_OUTDATED_PASSWORD\");\n    }\n    const arr = hash.split(\":\");\n    if (arr.length === 2) {\n        const [salt, key] = arr;\n        const targetKey = await hashWithScrypt(s.normalize(\"NFKC\"), salt, 8);\n        const result = constantTimeEqual(targetKey, key);\n        return result;\n    }\n    if (arr.length !== 3)\n        return false;\n    const [version, salt, key] = arr;\n    if (version === \"s2\") {\n        const targetKey = await hashWithScrypt(s.normalize(\"NFKC\"), salt);\n        const result = constantTimeEqual(targetKey, key);\n        return result;\n    }\n    return false;\n};\nconst constantTimeEqual = (a, b) => {\n    if (a.length !== b.length) {\n        return false;\n    }\n    const aUint8Array = new TextEncoder().encode(a);\n    const bUint8Array = new TextEncoder().encode(b);\n    let c = 0;\n    for (let i = 0; i < a.length; i++) {\n        c |= aUint8Array[i] ^ bUint8Array[i]; // ^: XOR operator\n    }\n    return c === 0;\n};\nexport const convertUint8ArrayToHex = (arr) => {\n    return [...arr].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\");\n};\n", "export const getTimeAfterSeconds = (seconds) => {\n    return new Date().getTime() + 1000 * seconds;\n};\nexport const isWithinExpiration = (expiresInMs) => {\n    const currentTime = Date.now();\n    if (currentTime > expiresInMs)\n        return false;\n    return true;\n};\n", "import { isWithinExpiration } from \"../utils/date.js\";\nexport const isValidDatabaseSession = (databaseSession) => {\n    return isWithinExpiration(databaseSession.idle_expires);\n};\n", "const DEBUG_GLOBAL = \"__lucia_debug_mode\";\nconst ESCAPE = \"\\x1B\";\nconst DEFAULT_TEXT_FORMAT = \"\\x1B[0m\";\nconst DEFAULT_FG_BG = `${ESCAPE}[0m`;\nconst RED_CODE = 9;\nconst LUCIA_COLOR_CODE = 63;\nconst WHITE_CODE = 231;\nconst GREEN_CODE = 34;\nconst CYAN_CODE = 6;\nconst YELLOW_CODE = 3;\nconst PURPLE_CODE = 5;\nconst BLUE_CODE = 4;\nconst globalContext = globalThis;\nglobalContext[DEBUG_GLOBAL] = false;\nconst format = (text, format, removeFormat) => {\n    return `${format}${text}${removeFormat ? removeFormat : DEFAULT_TEXT_FORMAT}`;\n};\nconst bgFormat = (text, colorCode) => {\n    return format(text, `${ESCAPE}[48;5;${colorCode}m`, DEFAULT_FG_BG);\n};\nconst fgFormat = (text, colorCode) => {\n    return format(text, `${ESCAPE}[38;5;${colorCode}m`, DEFAULT_FG_BG);\n};\nexport const bg = {\n    lucia: (text) => bgFormat(text, LUCIA_COLOR_CODE),\n    red: (text) => bgFormat(text, RED_CODE),\n    white: (text) => bgFormat(text, WHITE_CODE),\n    green: (text) => bgFormat(text, GREEN_CODE),\n    cyan: (text) => bgFormat(text, CYAN_CODE),\n    yellow: (text) => bgFormat(text, YELLOW_CODE),\n    purple: (text) => bgFormat(text, PURPLE_CODE),\n    blue: (text) => bgFormat(text, BLUE_CODE)\n};\nexport const fg = {\n    lucia: (text) => fgFormat(text, LUCIA_COLOR_CODE),\n    red: (text) => fgFormat(text, RED_CODE),\n    white: (text) => fgFormat(text, WHITE_CODE),\n    green: (text) => fgFormat(text, GREEN_CODE),\n    cyan: (text) => fgFormat(text, CYAN_CODE),\n    yellow: (text) => fgFormat(text, YELLOW_CODE),\n    purple: (text) => fgFormat(text, PURPLE_CODE),\n    blue: (text) => fgFormat(text, BLUE_CODE),\n    default: (text) => format(text, DEFAULT_TEXT_FORMAT)\n};\nexport const bold = (text) => {\n    return format(text, `${ESCAPE}[1m`, `${ESCAPE}[22m`);\n};\nconst dim = (text) => {\n    return format(text, `${ESCAPE}[2m`, `${ESCAPE}[22m`);\n};\nconst isDebugModeEnabled = () => {\n    return Boolean(globalContext[DEBUG_GLOBAL]);\n};\nconst linebreak = () => console.log(\"\");\nconst createCategory = (name, themeTextColor) => {\n    const createLogger = (textColor = fg.default) => {\n        return (text, subtext) => {\n            if (!isDebugModeEnabled())\n                return;\n            if (subtext) {\n                return log(themeTextColor(`[${name}]`), `${textColor(text)}`, subtext);\n            }\n            log(themeTextColor(`[${name}]`), `${textColor(text)}`);\n        };\n    };\n    return {\n        info: createLogger(),\n        notice: createLogger(fg.yellow),\n        fail: createLogger(fg.red),\n        success: createLogger(fg.green)\n    };\n};\nexport const enableDebugMode = () => {\n    globalContext[DEBUG_GLOBAL] = true;\n};\nconst disableDebugMode = () => {\n    globalContext[DEBUG_GLOBAL] = false;\n};\nexport const debug = {\n    init: (debugEnabled) => {\n        if (debugEnabled) {\n            enableDebugMode();\n            linebreak();\n            console.log(` ${bg.lucia(bold(fg.white(\" lucia \")))}  ${fg.lucia(bold(\"Debug mode enabled\"))}`);\n        }\n        else {\n            disableDebugMode();\n        }\n    },\n    request: {\n        init: (method, href) => {\n            if (!isDebugModeEnabled())\n                return;\n            linebreak();\n            const getUrl = () => {\n                try {\n                    const url = new URL(href);\n                    return url.origin + url.pathname;\n                }\n                catch {\n                    return href;\n                }\n            };\n            log(bg.cyan(bold(fg.white(\" request \"))), fg.cyan(`${method.toUpperCase()} ${getUrl()}`));\n        },\n        ...createCategory(\"request\", fg.cyan)\n    },\n    session: createCategory(\"session\", fg.purple),\n    key: createCategory(\"key\", fg.blue)\n};\nconst log = (type, text, subtext) => {\n    if (!subtext) {\n        return console.log(`${dim(new Date().toLocaleTimeString())}  ${type} ${text}`);\n    }\n    console.log(`${dim(new Date().toLocaleTimeString())}  ${type} ${text} ${dim(subtext)}`);\n};\n", "export const isAllowedOrigin = (origin, host, allowedSubdomains) => {\n    const originHost = new URL(origin).host;\n    const baseDomain = getBaseDomain(host);\n    if (host.length < 1 || origin.length < 1)\n        return false;\n    if (originHost === host)\n        return true;\n    if (allowedSubdomains === \"*\") {\n        if (originHost.endsWith(`.${baseDomain}`))\n            return true;\n        return false;\n    }\n    for (const subdomain of allowedSubdomains) {\n        const allowedHostPermutation = subdomain === null ? baseDomain : [subdomain, baseDomain].join(\".\");\n        if (allowedHostPermutation === originHost)\n            return true;\n    }\n    return false;\n};\nconst getBaseDomain = (host) => {\n    if (host.startsWith(\"localhost:\"))\n        return host;\n    return host.split(\".\").slice(-2).join(\".\");\n};\nexport const safeParseUrl = (url) => {\n    try {\n        return new URL(url);\n    }\n    catch {\n        return null;\n    }\n};\n", "import { debug } from \"../utils/debug.js\";\nimport { LuciaError } from \"./error.js\";\nimport { createHeadersFromObject } from \"../utils/request.js\";\nimport { isAllowedOrigin, safeParseUrl } from \"../utils/url.js\";\nexport class AuthRequest {\n    auth;\n    requestContext;\n    constructor(auth, config) {\n        debug.request.init(config.requestContext.request.method, config.requestContext.request.url ?? \"(url unknown)\");\n        this.auth = auth;\n        this.requestContext = config.requestContext;\n        const csrfProtectionConfig = typeof config.csrfProtection === \"object\" ? config.csrfProtection : {};\n        const csrfProtectionEnabled = config.csrfProtection !== false;\n        if (!csrfProtectionEnabled ||\n            this.isValidRequestOrigin(csrfProtectionConfig)) {\n            this.storedSessionId =\n                this.requestContext.sessionCookie ??\n                    auth.readSessionCookie(this.requestContext.request.headers.get(\"Cookie\"));\n        }\n        else {\n            this.storedSessionId = null;\n        }\n        this.bearerToken = auth.readBearerToken(this.requestContext.request.headers.get(\"Authorization\"));\n    }\n    validatePromise = null;\n    validateBearerTokenPromise = null;\n    storedSessionId;\n    bearerToken;\n    setSession = (session) => {\n        const sessionId = session?.sessionId ?? null;\n        if (this.storedSessionId === sessionId)\n            return;\n        this.validatePromise = null;\n        this.setSessionCookie(session);\n    };\n    maybeSetSession = (session) => {\n        try {\n            this.setSession(session);\n        }\n        catch {\n            // ignore error\n            // some middleware throw error\n        }\n    };\n    setSessionCookie = (session) => {\n        const sessionId = session?.sessionId ?? null;\n        if (this.storedSessionId === sessionId)\n            return;\n        this.storedSessionId = sessionId;\n        this.requestContext.setCookie(this.auth.createSessionCookie(session));\n        if (session) {\n            debug.request.notice(\"Session cookie stored\", session.sessionId);\n        }\n        else {\n            debug.request.notice(\"Session cookie deleted\");\n        }\n    };\n    validate = async () => {\n        if (this.validatePromise) {\n            debug.request.info(\"Using cached result for session validation\");\n            return this.validatePromise;\n        }\n        this.validatePromise = new Promise(async (resolve, reject) => {\n            if (!this.storedSessionId)\n                return resolve(null);\n            try {\n                const session = await this.auth.validateSession(this.storedSessionId);\n                if (session.fresh) {\n                    this.maybeSetSession(session);\n                }\n                return resolve(session);\n            }\n            catch (e) {\n                if (e instanceof LuciaError &&\n                    e.message === \"AUTH_INVALID_SESSION_ID\") {\n                    this.maybeSetSession(null);\n                    return resolve(null);\n                }\n                return reject(e);\n            }\n        });\n        return await this.validatePromise;\n    };\n    validateBearerToken = async () => {\n        if (this.validateBearerTokenPromise) {\n            debug.request.info(\"Using cached result for bearer token validation\");\n            return this.validatePromise;\n        }\n        this.validatePromise = new Promise(async (resolve, reject) => {\n            if (!this.bearerToken)\n                return resolve(null);\n            try {\n                const session = await this.auth.validateSession(this.bearerToken);\n                return resolve(session);\n            }\n            catch (e) {\n                if (e instanceof LuciaError) {\n                    return resolve(null);\n                }\n                return reject(e);\n            }\n        });\n        return await this.validatePromise;\n    };\n    invalidate() {\n        this.validatePromise = null;\n        this.validateBearerTokenPromise = null;\n    }\n    isValidRequestOrigin = (config) => {\n        const request = this.requestContext.request;\n        const whitelist = [\"GET\", \"HEAD\", \"OPTIONS\", \"TRACE\"];\n        if (whitelist.some((val) => val === request.method.toUpperCase())) {\n            return true;\n        }\n        const requestOrigin = request.headers.get(\"Origin\");\n        if (!requestOrigin) {\n            debug.request.fail(\"No request origin available\");\n            return false;\n        }\n        let host = null;\n        if (config.host !== undefined) {\n            host = config.host ?? null;\n        }\n        else if (request.url !== null && request.url !== undefined) {\n            host = safeParseUrl(request.url)?.host ?? null;\n        }\n        else {\n            host = request.headers.get(config.hostHeader ?? \"Host\");\n        }\n        debug.request.info(\"Host\", host ?? \"(Host unknown)\");\n        if (host !== null &&\n            isAllowedOrigin(requestOrigin, host, config.allowedSubDomains ?? [])) {\n            debug.request.info(\"Valid request origin\", requestOrigin);\n            return true;\n        }\n        debug.request.info(\"Invalid request origin\", requestOrigin);\n        return false;\n    };\n}\nexport const transformRequestContext = ({ request, setCookie, sessionCookie }) => {\n    return {\n        request: {\n            url: request.url,\n            method: request.method,\n            headers: \"authorization\" in request.headers\n                ? createHeadersFromObject(request.headers)\n                : request.headers\n        },\n        setCookie,\n        sessionCookie: sessionCookie ?? request.storedSessionCookie\n    };\n};\n", "import { LuciaError } from \"./error.js\";\nexport const createAdapter = (adapter) => {\n    if (!(\"user\" in adapter))\n        return adapter(LuciaError);\n    let userAdapter = adapter.user(LuciaError);\n    let sessionAdapter = adapter.session(LuciaError);\n    if (\"getSessionAndUser\" in userAdapter) {\n        const { getSessionAndUser: _, ...extractedUserAdapter } = userAdapter;\n        userAdapter = extractedUserAdapter;\n    }\n    if (\"getSessionAndUser\" in sessionAdapter) {\n        const { getSessionAndUser: _, ...extractedSessionAdapter } = sessionAdapter;\n        sessionAdapter = extractedSessionAdapter;\n    }\n    return {\n        ...userAdapter,\n        ...sessionAdapter\n    };\n};\n", "export const createKeyId = (providerId, providerUserId) => {\n    if (providerId.includes(\":\")) {\n        throw new TypeError(\"Provider id must not include any colons (:)\");\n    }\n    return `${providerId}:${providerUserId}`;\n};\n", "import { DEFAULT_SESSION_COOKIE_NAME, createSessionCookie } from \"./cookie.js\";\nimport { logError } from \"../utils/log.js\";\nimport { generateScryptHash, validateScryptHash } from \"../utils/crypto.js\";\nimport { generateRandomString } from \"../utils/crypto.js\";\nimport { LuciaError } from \"./error.js\";\nimport { parseCookie } from \"../utils/cookie.js\";\nimport { isValidDatabaseSession } from \"./session.js\";\nimport { AuthRequest, transformRequestContext } from \"./request.js\";\nimport { lucia as defaultMiddleware } from \"../middleware/index.js\";\nimport { debug } from \"../utils/debug.js\";\nimport { isWithinExpiration } from \"../utils/date.js\";\nimport { createAdapter } from \"./adapter.js\";\nimport { createKeyId } from \"./database.js\";\nimport { isAllowedOrigin, safeParseUrl } from \"../utils/url.js\";\nexport const lucia = (config) => {\n    return new Auth(config);\n};\nconst validateConfiguration = (config) => {\n    const adapterProvided = config.adapter;\n    if (!adapterProvided) {\n        logError('Adapter is not defined in configuration (\"config.adapter\")');\n        process.exit(1);\n    }\n};\nexport class Auth {\n    adapter;\n    sessionCookieConfig;\n    sessionExpiresIn;\n    csrfProtection;\n    env;\n    passwordHash = {\n        generate: generateScryptHash,\n        validate: validateScryptHash\n    };\n    middleware = defaultMiddleware();\n    experimental;\n    constructor(config) {\n        validateConfiguration(config);\n        this.adapter = createAdapter(config.adapter);\n        this.env = config.env;\n        this.sessionExpiresIn = {\n            activePeriod: config.sessionExpiresIn?.activePeriod ?? 1000 * 60 * 60 * 24,\n            idlePeriod: config.sessionExpiresIn?.idlePeriod ?? 1000 * 60 * 60 * 24 * 14\n        };\n        this.getUserAttributes = (databaseUser) => {\n            const defaultTransform = () => {\n                return {};\n            };\n            const transform = config.getUserAttributes ?? defaultTransform;\n            return transform(databaseUser);\n        };\n        this.getSessionAttributes = (databaseSession) => {\n            const defaultTransform = () => {\n                return {};\n            };\n            const transform = config.getSessionAttributes ?? defaultTransform;\n            return transform(databaseSession);\n        };\n        this.csrfProtection = config.csrfProtection ?? true;\n        this.sessionCookieConfig = config.sessionCookie ?? {};\n        if (config.passwordHash) {\n            this.passwordHash = config.passwordHash;\n        }\n        if (config.middleware) {\n            this.middleware = config.middleware;\n        }\n        this.experimental = {\n            debugMode: config.experimental?.debugMode ?? false\n        };\n        debug.init(this.experimental.debugMode);\n    }\n    getUserAttributes;\n    getSessionAttributes;\n    transformDatabaseUser = (databaseUser) => {\n        const attributes = this.getUserAttributes(databaseUser);\n        return {\n            ...attributes,\n            userId: databaseUser.id\n        };\n    };\n    transformDatabaseKey = (databaseKey) => {\n        const [providerId, ...providerUserIdSegments] = databaseKey.id.split(\":\");\n        const providerUserId = providerUserIdSegments.join(\":\");\n        const userId = databaseKey.user_id;\n        const isPasswordDefined = !!databaseKey.hashed_password;\n        return {\n            providerId,\n            providerUserId,\n            userId,\n            passwordDefined: isPasswordDefined\n        };\n    };\n    transformDatabaseSession = (databaseSession, context) => {\n        const attributes = this.getSessionAttributes(databaseSession);\n        const active = isWithinExpiration(databaseSession.active_expires);\n        return {\n            ...attributes,\n            user: context.user,\n            sessionId: databaseSession.id,\n            activePeriodExpiresAt: new Date(Number(databaseSession.active_expires)),\n            idlePeriodExpiresAt: new Date(Number(databaseSession.idle_expires)),\n            state: active ? \"active\" : \"idle\",\n            fresh: context.fresh\n        };\n    };\n    getDatabaseUser = async (userId) => {\n        const databaseUser = await this.adapter.getUser(userId);\n        if (!databaseUser) {\n            throw new LuciaError(\"AUTH_INVALID_USER_ID\");\n        }\n        return databaseUser;\n    };\n    getDatabaseSession = async (sessionId) => {\n        const databaseSession = await this.adapter.getSession(sessionId);\n        if (!databaseSession) {\n            debug.session.fail(\"Session not found\", sessionId);\n            throw new LuciaError(\"AUTH_INVALID_SESSION_ID\");\n        }\n        if (!isValidDatabaseSession(databaseSession)) {\n            debug.session.fail(`Session expired at ${new Date(Number(databaseSession.idle_expires))}`, sessionId);\n            throw new LuciaError(\"AUTH_INVALID_SESSION_ID\");\n        }\n        return databaseSession;\n    };\n    getDatabaseSessionAndUser = async (sessionId) => {\n        if (this.adapter.getSessionAndUser) {\n            const [databaseSession, databaseUser] = await this.adapter.getSessionAndUser(sessionId);\n            if (!databaseSession) {\n                debug.session.fail(\"Session not found\", sessionId);\n                throw new LuciaError(\"AUTH_INVALID_SESSION_ID\");\n            }\n            if (!isValidDatabaseSession(databaseSession)) {\n                debug.session.fail(`Session expired at ${new Date(Number(databaseSession.idle_expires))}`, sessionId);\n                throw new LuciaError(\"AUTH_INVALID_SESSION_ID\");\n            }\n            return [databaseSession, databaseUser];\n        }\n        const databaseSession = await this.getDatabaseSession(sessionId);\n        const databaseUser = await this.getDatabaseUser(databaseSession.user_id);\n        return [databaseSession, databaseUser];\n    };\n    validateSessionIdArgument = (sessionId) => {\n        if (!sessionId) {\n            debug.session.fail(\"Empty session id\");\n            throw new LuciaError(\"AUTH_INVALID_SESSION_ID\");\n        }\n    };\n    getNewSessionExpiration = (sessionExpiresIn) => {\n        const activePeriodExpiresAt = new Date(new Date().getTime() +\n            (sessionExpiresIn?.activePeriod ?? this.sessionExpiresIn.activePeriod));\n        const idlePeriodExpiresAt = new Date(activePeriodExpiresAt.getTime() +\n            (sessionExpiresIn?.idlePeriod ?? this.sessionExpiresIn.idlePeriod));\n        return { activePeriodExpiresAt, idlePeriodExpiresAt };\n    };\n    getUser = async (userId) => {\n        const databaseUser = await this.getDatabaseUser(userId);\n        const user = this.transformDatabaseUser(databaseUser);\n        return user;\n    };\n    createUser = async (options) => {\n        const userId = options.userId ?? generateRandomString(15);\n        const userAttributes = options.attributes ?? {};\n        const databaseUser = {\n            ...userAttributes,\n            id: userId\n        };\n        if (options.key === null) {\n            await this.adapter.setUser(databaseUser, null);\n            return this.transformDatabaseUser(databaseUser);\n        }\n        const keyId = createKeyId(options.key.providerId, options.key.providerUserId);\n        const password = options.key.password;\n        const hashedPassword = password === null ? null : await this.passwordHash.generate(password);\n        await this.adapter.setUser(databaseUser, {\n            id: keyId,\n            user_id: userId,\n            hashed_password: hashedPassword\n        });\n        return this.transformDatabaseUser(databaseUser);\n    };\n    updateUserAttributes = async (userId, attributes) => {\n        await this.adapter.updateUser(userId, attributes);\n        return await this.getUser(userId);\n    };\n    deleteUser = async (userId) => {\n        await this.adapter.deleteSessionsByUserId(userId);\n        await this.adapter.deleteKeysByUserId(userId);\n        await this.adapter.deleteUser(userId);\n    };\n    useKey = async (providerId, providerUserId, password) => {\n        const keyId = createKeyId(providerId, providerUserId);\n        const databaseKey = await this.adapter.getKey(keyId);\n        if (!databaseKey) {\n            debug.key.fail(\"Key not found\", keyId);\n            throw new LuciaError(\"AUTH_INVALID_KEY_ID\");\n        }\n        const hashedPassword = databaseKey.hashed_password;\n        if (hashedPassword !== null) {\n            debug.key.info(\"Key includes password\");\n            if (!password) {\n                debug.key.fail(\"Key password not provided\", keyId);\n                throw new LuciaError(\"AUTH_INVALID_PASSWORD\");\n            }\n            const validPassword = await this.passwordHash.validate(password, hashedPassword);\n            if (!validPassword) {\n                debug.key.fail(\"Incorrect key password\", password);\n                throw new LuciaError(\"AUTH_INVALID_PASSWORD\");\n            }\n            debug.key.notice(\"Validated key password\");\n        }\n        else {\n            if (password !== null) {\n                debug.key.fail(\"Incorrect key password\", password);\n                throw new LuciaError(\"AUTH_INVALID_PASSWORD\");\n            }\n            debug.key.info(\"No password included in key\");\n        }\n        debug.key.success(\"Validated key\", keyId);\n        return this.transformDatabaseKey(databaseKey);\n    };\n    getSession = async (sessionId) => {\n        this.validateSessionIdArgument(sessionId);\n        const [databaseSession, databaseUser] = await this.getDatabaseSessionAndUser(sessionId);\n        const user = this.transformDatabaseUser(databaseUser);\n        return this.transformDatabaseSession(databaseSession, {\n            user,\n            fresh: false\n        });\n    };\n    getAllUserSessions = async (userId) => {\n        const [user, databaseSessions] = await Promise.all([\n            this.getUser(userId),\n            await this.adapter.getSessionsByUserId(userId)\n        ]);\n        const validStoredUserSessions = databaseSessions\n            .filter((databaseSession) => {\n            return isValidDatabaseSession(databaseSession);\n        })\n            .map((databaseSession) => {\n            return this.transformDatabaseSession(databaseSession, {\n                user,\n                fresh: false\n            });\n        });\n        return validStoredUserSessions;\n    };\n    validateSession = async (sessionId) => {\n        this.validateSessionIdArgument(sessionId);\n        const [databaseSession, databaseUser] = await this.getDatabaseSessionAndUser(sessionId);\n        const user = this.transformDatabaseUser(databaseUser);\n        const session = this.transformDatabaseSession(databaseSession, {\n            user,\n            fresh: false\n        });\n        if (session.state === \"active\") {\n            debug.session.success(\"Validated session\", session.sessionId);\n            return session;\n        }\n        const { activePeriodExpiresAt, idlePeriodExpiresAt } = this.getNewSessionExpiration();\n        await this.adapter.updateSession(session.sessionId, {\n            active_expires: activePeriodExpiresAt.getTime(),\n            idle_expires: idlePeriodExpiresAt.getTime()\n        });\n        const renewedDatabaseSession = {\n            ...session,\n            idlePeriodExpiresAt,\n            activePeriodExpiresAt,\n            fresh: true\n        };\n        return renewedDatabaseSession;\n    };\n    createSession = async (options) => {\n        const { activePeriodExpiresAt, idlePeriodExpiresAt } = this.getNewSessionExpiration();\n        const userId = options.userId;\n        const sessionId = options?.sessionId ?? generateRandomString(40);\n        const attributes = options.attributes;\n        const databaseSession = {\n            ...attributes,\n            id: sessionId,\n            user_id: userId,\n            active_expires: activePeriodExpiresAt.getTime(),\n            idle_expires: idlePeriodExpiresAt.getTime()\n        };\n        const [user] = await Promise.all([\n            this.getUser(userId),\n            this.adapter.setSession(databaseSession)\n        ]);\n        return this.transformDatabaseSession(databaseSession, {\n            user,\n            fresh: false\n        });\n    };\n    updateSessionAttributes = async (sessionId, attributes) => {\n        this.validateSessionIdArgument(sessionId);\n        await this.adapter.updateSession(sessionId, attributes);\n        return this.getSession(sessionId);\n    };\n    invalidateSession = async (sessionId) => {\n        this.validateSessionIdArgument(sessionId);\n        await this.adapter.deleteSession(sessionId);\n        debug.session.notice(\"Invalidated session\", sessionId);\n    };\n    invalidateAllUserSessions = async (userId) => {\n        await this.adapter.deleteSessionsByUserId(userId);\n    };\n    deleteDeadUserSessions = async (userId) => {\n        const databaseSessions = await this.adapter.getSessionsByUserId(userId);\n        const deadSessionIds = databaseSessions\n            .filter((databaseSession) => {\n            return !isValidDatabaseSession(databaseSession);\n        })\n            .map((databaseSession) => databaseSession.id);\n        await Promise.all(deadSessionIds.map((deadSessionId) => {\n            this.adapter.deleteSession(deadSessionId);\n        }));\n    };\n    /**\n     * @deprecated To be removed in next major release\n     */\n    validateRequestOrigin = (request) => {\n        if (request.method === null) {\n            debug.request.fail(\"Request method unavailable\");\n            throw new LuciaError(\"AUTH_INVALID_REQUEST\");\n        }\n        if (request.url === null) {\n            debug.request.fail(\"Request url unavailable\");\n            throw new LuciaError(\"AUTH_INVALID_REQUEST\");\n        }\n        if (request.method.toUpperCase() !== \"GET\" &&\n            request.method.toUpperCase() !== \"HEAD\") {\n            const requestOrigin = request.headers.origin;\n            if (!requestOrigin) {\n                debug.request.fail(\"No request origin available\");\n                throw new LuciaError(\"AUTH_INVALID_REQUEST\");\n            }\n            try {\n                const url = safeParseUrl(request.url);\n                const allowedSubDomains = typeof this.csrfProtection === \"object\"\n                    ? this.csrfProtection.allowedSubDomains ?? []\n                    : [];\n                if (url === null ||\n                    !isAllowedOrigin(requestOrigin, url.origin, allowedSubDomains)) {\n                    throw new LuciaError(\"AUTH_INVALID_REQUEST\");\n                }\n                debug.request.info(\"Valid request origin\", requestOrigin);\n            }\n            catch {\n                debug.request.fail(\"Invalid origin string\", requestOrigin);\n                // failed to parse url\n                throw new LuciaError(\"AUTH_INVALID_REQUEST\");\n            }\n        }\n        else {\n            debug.request.notice(\"Skipping CSRF check\");\n        }\n    };\n    readSessionCookie = (cookieHeader) => {\n        if (!cookieHeader) {\n            debug.request.info(\"No session cookie found\");\n            return null;\n        }\n        const cookies = parseCookie(cookieHeader);\n        const sessionCookieName = this.sessionCookieConfig.name ?? DEFAULT_SESSION_COOKIE_NAME;\n        const sessionId = cookies[sessionCookieName] ?? null;\n        if (sessionId) {\n            debug.request.info(\"Found session cookie\", sessionId);\n        }\n        else {\n            debug.request.info(\"No session cookie found\");\n        }\n        return sessionId;\n    };\n    readBearerToken = (authorizationHeader) => {\n        if (!authorizationHeader) {\n            debug.request.info(\"No token found in authorization header\");\n            return null;\n        }\n        const [authScheme, token] = authorizationHeader.split(\" \");\n        if (authScheme !== \"Bearer\") {\n            debug.request.fail(\"Invalid authorization header auth scheme\", authScheme);\n            return null;\n        }\n        return token ?? null;\n    };\n    handleRequest = (\n    // cant reference middleware type with Lucia.Auth\n    ...args) => {\n        const middleware = this.middleware;\n        const sessionCookieName = this.sessionCookieConfig.name ?? DEFAULT_SESSION_COOKIE_NAME;\n        return new AuthRequest(this, {\n            csrfProtection: this.csrfProtection,\n            requestContext: transformRequestContext(middleware({\n                args,\n                env: this.env,\n                sessionCookieName: sessionCookieName\n            }))\n        });\n    };\n    createSessionCookie = (session) => {\n        return createSessionCookie(session, {\n            env: this.env,\n            cookie: this.sessionCookieConfig\n        });\n    };\n    createKey = async (options) => {\n        const keyId = createKeyId(options.providerId, options.providerUserId);\n        let hashedPassword = null;\n        if (options.password !== null) {\n            hashedPassword = await this.passwordHash.generate(options.password);\n        }\n        const userId = options.userId;\n        await this.adapter.setKey({\n            id: keyId,\n            user_id: userId,\n            hashed_password: hashedPassword\n        });\n        return {\n            providerId: options.providerId,\n            providerUserId: options.providerUserId,\n            passwordDefined: !!options.password,\n            userId\n        };\n    };\n    deleteKey = async (providerId, providerUserId) => {\n        const keyId = createKeyId(providerId, providerUserId);\n        await this.adapter.deleteKey(keyId);\n    };\n    getKey = async (providerId, providerUserId) => {\n        const keyId = createKeyId(providerId, providerUserId);\n        const databaseKey = await this.adapter.getKey(keyId);\n        if (!databaseKey) {\n            throw new LuciaError(\"AUTH_INVALID_KEY_ID\");\n        }\n        const key = this.transformDatabaseKey(databaseKey);\n        return key;\n    };\n    getAllUserKeys = async (userId) => {\n        const [databaseKeys] = await Promise.all([\n            await this.adapter.getKeysByUserId(userId),\n            this.getUser(userId)\n        ]);\n        return databaseKeys.map((databaseKey) => this.transformDatabaseKey(databaseKey));\n    };\n    updateKeyPassword = async (providerId, providerUserId, password) => {\n        const keyId = createKeyId(providerId, providerUserId);\n        const hashedPassword = password === null ? null : await this.passwordHash.generate(password);\n        await this.adapter.updateKey(keyId, {\n            hashed_password: hashedPassword\n        });\n        return await this.getKey(providerId, providerUserId);\n    };\n}\n"],
  "mappings": "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",
  "names": ["r", "salt", "key", "format", "lucia", "databaseSession", "databaseUser"]
}
