{
  "version": 3,
  "sources": ["../../lucia/dist/utils/request.js", "../../lucia/dist/middleware/index.js"],
  "sourcesContent": ["export const createHeadersFromObject = (headersObject) => {\n    const headers = new Headers();\n    for (const [key, value] of Object.entries(headersObject)) {\n        if (value === null || value === undefined)\n            continue;\n        if (typeof value === \"string\") {\n            headers.set(key, value);\n        }\n        else {\n            for (const item of value) {\n                headers.append(key, item);\n            }\n        }\n    }\n    return headers;\n};\n", "import { createHeadersFromObject } from \"../utils/request.js\";\nexport const node = () => {\n    return ({ args }) => {\n        const [incomingMessage, outgoingMessage] = args;\n        const requestContext = {\n            request: {\n                method: incomingMessage.method ?? \"\",\n                headers: createHeadersFromObject(incomingMessage.headers)\n            },\n            setCookie: (cookie) => {\n                let parsedSetCookieHeaderValues = [];\n                const setCookieHeaderValue = outgoingMessage.getHeader(\"Set-Cookie\");\n                if (typeof setCookieHeaderValue === \"string\") {\n                    parsedSetCookieHeaderValues = [setCookieHeaderValue];\n                }\n                else if (Array.isArray(setCookieHeaderValue)) {\n                    parsedSetCookieHeaderValues = setCookieHeaderValue;\n                }\n                outgoingMessage.setHeader(\"Set-Cookie\", [\n                    cookie.serialize(),\n                    ...parsedSetCookieHeaderValues\n                ]);\n            }\n        };\n        return requestContext;\n    };\n};\nexport const express = () => {\n    return ({ args }) => {\n        const [req, res] = args;\n        const requestContext = {\n            request: {\n                method: req.method,\n                headers: createHeadersFromObject(req.headers)\n            },\n            setCookie: (cookie) => {\n                const cookieMaxAge = cookie.attributes.maxAge;\n                res.cookie(cookie.name, cookie.value, {\n                    ...cookie.attributes,\n                    maxAge: cookieMaxAge ? cookieMaxAge * 1000 : cookieMaxAge\n                });\n            }\n        };\n        return requestContext;\n    };\n};\nexport const fastify = () => {\n    return ({ args }) => {\n        const [req, res] = args;\n        const requestContext = {\n            request: {\n                method: req.method,\n                headers: createHeadersFromObject(req.headers)\n            },\n            setCookie: (cookie) => {\n                res.header(\"Set-Cookie\", [cookie.serialize()]);\n            }\n        };\n        return requestContext;\n    };\n};\nexport const sveltekit = () => {\n    return ({ args, sessionCookieName }) => {\n        const [event] = args;\n        const requestContext = {\n            request: event.request,\n            sessionCookie: event.cookies.get(sessionCookieName) ?? null,\n            setCookie: (cookie) => {\n                event.cookies.set(cookie.name, cookie.value, {\n                    path: \".\",\n                    ...cookie.attributes\n                });\n            }\n        };\n        return requestContext;\n    };\n};\nexport const astro = () => {\n    return ({ args, sessionCookieName }) => {\n        const [context] = args;\n        const requestContext = {\n            request: context.request,\n            sessionCookie: context.cookies.get(sessionCookieName)?.value || null,\n            setCookie: (cookie) => {\n                context.cookies.set(cookie.name, cookie.value, cookie.attributes);\n            }\n        };\n        return requestContext;\n    };\n};\nexport const qwik = () => {\n    return ({ args, sessionCookieName }) => {\n        const [event] = args;\n        const requestContext = {\n            request: event.request,\n            sessionCookie: event.cookie.get(sessionCookieName)?.value ?? null,\n            setCookie: (cookie) => {\n                event.cookie.set(cookie.name, cookie.value, cookie.attributes);\n            }\n        };\n        return requestContext;\n    };\n};\nexport const elysia = () => {\n    return ({ args }) => {\n        const [{ request, set }] = args;\n        return {\n            request,\n            setCookie: (cookie) => {\n                const setCookieHeader = set.headers[\"Set-Cookie\"] ?? [];\n                const setCookieHeaders = Array.isArray(setCookieHeader)\n                    ? setCookieHeader\n                    : [setCookieHeader];\n                setCookieHeaders.push(cookie.serialize());\n                set.headers[\"Set-Cookie\"] = setCookieHeaders;\n            }\n        };\n    };\n};\nexport const lucia = () => {\n    return ({ args }) => args[0];\n};\nexport const web = () => {\n    return ({ args }) => {\n        const [request] = args;\n        const requestContext = {\n            request,\n            setCookie: () => {\n                throw new Error(\"Cookies cannot be set when using the `web()` middleware\");\n            }\n        };\n        return requestContext;\n    };\n};\nexport const nextjs = () => {\n    return ({ args, sessionCookieName, env }) => {\n        const [serverContext] = args;\n        if (\"cookies\" in serverContext) {\n            // for some reason `\"request\" in NextRequest` returns true???\n            const request = typeof serverContext.cookies === \"function\"\n                ? serverContext.request\n                : serverContext;\n            const readonlyCookieStore = typeof serverContext.cookies === \"function\"\n                ? serverContext.cookies()\n                : serverContext.cookies;\n            const sessionCookie = readonlyCookieStore.get(sessionCookieName)?.value ?? null;\n            const requestContext = {\n                request: request ?? {\n                    method: \"GET\",\n                    headers: new Headers()\n                },\n                sessionCookie,\n                setCookie: (cookie) => {\n                    if (typeof serverContext.cookies !== \"function\")\n                        return;\n                    const cookieStore = serverContext.cookies();\n                    if (!cookieStore.set)\n                        return;\n                    try {\n                        cookieStore.set(cookie.name, cookie.value, cookie.attributes);\n                    }\n                    catch {\n                        // ignore - set() is not available\n                    }\n                }\n            };\n            return requestContext;\n        }\n        const req = \"req\" in serverContext ? serverContext.req : serverContext;\n        const res = \"res\" in serverContext ? serverContext.res : null;\n        const request = {\n            method: req.method ?? \"\",\n            headers: createHeadersFromObject(req.headers)\n        };\n        return {\n            request,\n            setCookie: (cookie) => {\n                if (!res)\n                    return;\n                const setCookieHeaderValues = res\n                    .getHeader(\"Set-Cookie\")\n                    ?.toString()\n                    .split(\",\")\n                    .filter((val) => val) ?? [];\n                res.setHeader(\"Set-Cookie\", [\n                    cookie.serialize(),\n                    ...setCookieHeaderValues\n                ]);\n            }\n        };\n    };\n};\nexport const nextjs_future = () => {\n    return ({ args, sessionCookieName }) => {\n        if (args.length === 2) {\n            const [requestMethod, context] = args;\n            return {\n                request: {\n                    method: requestMethod,\n                    headers: context.headers()\n                },\n                setCookie: (cookie) => {\n                    try {\n                        context.cookies().set(cookie.name, cookie.value, cookie.attributes);\n                    }\n                    catch {\n                        // ignore error\n                        // can't differentiate between page.tsx render (can't set cookies)\n                        // vs API routes (can set cookies)\n                    }\n                },\n                sessionCookie: context.cookies().get(sessionCookieName)?.value ?? null\n            };\n        }\n        if (\"req\" in args[0]) {\n            const [{ req, res }] = args;\n            return {\n                request: {\n                    method: req.method ?? \"\",\n                    headers: createHeadersFromObject(req.headers)\n                },\n                setCookie: (cookie) => {\n                    if (!res)\n                        return;\n                    const setCookieHeaderValues = res\n                        .getHeader(\"Set-Cookie\")\n                        ?.toString()\n                        .split(\",\")\n                        .filter((val) => val) ?? [];\n                    res.setHeader(\"Set-Cookie\", [\n                        cookie.serialize(),\n                        ...setCookieHeaderValues\n                    ]);\n                }\n            };\n        }\n        const [request] = args;\n        return {\n            request,\n            setCookie: () => {\n                throw new Error(\"Cookies cannot be set when using the `web()` middleware\");\n            },\n            sessionCookie: request.cookies.get(sessionCookieName)?.value ?? null\n        };\n    };\n};\nexport const h3 = () => {\n    const nodeMiddleware = node();\n    return ({ args, sessionCookieName, env }) => {\n        const [context] = args;\n        return nodeMiddleware({\n            args: [context.node.req, context.node.res],\n            sessionCookieName,\n            env\n        });\n    };\n};\nexport const hono = () => {\n    return ({ args }) => {\n        const [context] = args;\n        return {\n            request: context.req,\n            setCookie: (cookie) => {\n                context.header(\"Set-Cookie\", cookie.serialize());\n            }\n        };\n    };\n};\n"],
  "mappings": "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",
  "names": ["request", "_a"]
}
